version: '3'

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  certs:
    driver: local

networks:
  proxy:
    external: true

services:
  traefik:
    image: traefik:latest
    container_name: traefik
    restart: unless-stopped
    env_file: .env
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-data/traefik.yml:/traefik.yml:ro
      - ./traefik-data/acme.json:/acme.json
      - ./traefik-data/configurations:/configurations
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.traefik-secure.entrypoints=websecure"
      - "traefik.http.routers.traefik-secure.rule=Host(`treafik.$SITE`)"
      - "traefik.http.routers.traefik-secure.middlewares=user-auth@file"
      - "traefik.http.routers.traefik-secure.service=api@internal"

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    env_file: .env
    ports:
      - 9000:9000
    security_opt:
      - no-new-privileges:true
    networks:
      - proxy
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.portainer-secure.entrypoints=websecure"
      - "traefik.http.routers.portainer-secure.rule=Host(`portainer.$SITE`)"
      - "traefik.http.routers.portainer-secure.service=portainer"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"

  speedtest:
    image: openspeedtest/latest:latest
    container_name: openspeedtest
    env_file: .env
    ports:
      - 3005:3000
      - 3006:3001
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.speedtest-secure.entrypoints=websecure"
      - "traefik.http.routers.speedtest-secure.rule=Host(`speedtest.$SITE`)"
      - "traefik.http.routers.speedtest-secure.service=portainer"
      - "traefik.http.services.speedtest.loadbalancer.server.port=3006"
  
  dashboard:
    image: b4bz/homer
    container_name: homer-dashboard
    ports:
      - 9055:8080
    restart: unless-stopped
    env_file: .env
    environment:
      - USER=$USER
      - GROUP=$USER
      - UID=1001
      - GID=1001
    volumes:
      - ./homer:/www/assets
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.homer-secure.entrypoints=websecure"
      - "traefik.http.routers.homer-secure.rule=Host(`homer.$SITE`)"
      - "traefik.http.routers.homer-secure.service=portainer"
      - "traefik.http.services.homer.loadbalancer.server.port=9055"

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    env_file: .env
    ports:
      - 4020:3000
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=proxy"
      - "traefik.http.routers.grafana-secure.entrypoints=websecure"
      - "traefik.http.routers.grafana-secure.rule=Host(`grafana.$SITE`)"
      - "traefik.http.routers.grafana-secure.service=portainer"
      - "traefik.http.services.grafana.loadbalancer.server.port=4020"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9010:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - proxy
    
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - proxy

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    #ports:
    #  - "8030:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - proxy