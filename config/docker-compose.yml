version: '3'

services:
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9000:9000
    restart: unless-stopped
    networks:
      - proxy

  db:
    image: jc21/mariadb-aria:latest
    container_name: db
    env_file: .env
    environment:
      MYSQL_ROOT_PASSWORD: '${ROOT_PASSWORD}'
      MYSQL_DATABASE: '${MYSQL_DATABASE}'
      MYSQL_USER: '${MYSQL_USER}'
      MYSQL_PASSWORD: '${MYSQL_PASSWORD}'
    volumes:
      - ./data/mysql:/var/lib/mysql
    restart: unless-stopped
    networks:
      - proxy

  nginx:
    image: jc21/nginx-proxy-manager:latest
    container_name: proxymanager
    env_file: .env
    ports:
      - 80:80
      - 81:81
      - 443:443
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
    environment:
      DB_MYSQL_HOST: "db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "${MYSQL_USER}"
      DB_MYSQL_PASSWORD: "${MYSQL_PASSWORD}"
      DB_MYSQL_NAME: "${MYSQL_DATABASE}"
      DISABLE_IPV6: 'true'
    restart: unless-stopped
    depends_on:
      - db
    networks:
      - proxy

  speedtest:
    image: openspeedtest/latest:latest
    container_name: openspeedtest
    ports:
      - 3005:3000
      - 3006:3001
    restart: unless-stopped
    networks:
      - proxy
      
  dashboard:
    image: b4bz/homer
    container_name: homer-dashboard
    ports:
      - 9055:8080
    restart: unless-stopped
    env_file: .env
    environment:
      - USER=${USER}
      - GROUP=${USER}
      - UID=1001
      - GID=1001
    volumes:
      - ./homer:/www/assets:ro
    networks:
      - proxy

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - 4020:3000
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    networks:
      - proxy
 
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9010:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus-data:/prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - proxy
    
  node_exporter:
    image: quay.io/prometheus/node-exporter:latest
    container_name: node_exporter
    command:
      - '--path.rootfs=/host'
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    networks:
      - proxy

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    devices:
      - /dev/kmsg
    restart: unless-stopped
    networks:
      - proxy
  
  cloudflare-ddns:
    image: oznu/cloudflare-ddns:latest
    container_name: ddns
    restart: unless-stopped
    env_file: .env
    environment:
      - API_KEY=${DNSAPI}
      - ZONE=${SITE}
      - PROXIED=true
      - PUID=1001
      - PGID=1001
    networks:
      - proxy

  openvpn-as:
    image: ghcr.io/linuxserver/openvpn-as
    container_name: openvpn-as
    env_file: .env
    cap_add:
      - NET_ADMIN
    environment:
      - PUID=1001
      - PGID=1001
      - TZ=${TIMEZONE}
      - INTERFACE=${NETADAPT} #optional
    volumes:
      - ./openvpn-data:/config
    ports:
      - 943:943
      - 9443:9443
      - 1194:1194/udp
    restart: unless-stopped
    networks:
      - proxy

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --interval 21600

networks:
  proxy:
    external: true

volumes:
  prometheus-data:
    driver: local
  grafana-data:
    driver: local